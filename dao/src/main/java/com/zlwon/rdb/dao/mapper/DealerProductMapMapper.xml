<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zlwon.rdb.dao.DealerProductMapMapper" >
  
  <resultMap id="BaseResultMap" type="com.zlwon.rdb.entity.DealerProductMap" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="manufacturer_id" property="manufacturerId" jdbcType="INTEGER" />
    <result column="brand_id" property="brandId" jdbcType="INTEGER" />
    <result column="available_industry" property="availableIndustry" jdbcType="VARCHAR" />
    <result column="available_area" property="availableArea" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, uid, manufacturer_id, brand_id, available_industry, available_area
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zl_dealer_product_map
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zl_dealer_product_map
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zlwon.rdb.entity.DealerProductMap" >
    insert into zl_dealer_product_map (id, uid, manufacturer_id, 
      brand_id, available_industry, available_area
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{manufacturerId,jdbcType=INTEGER}, 
      #{brandId,jdbcType=INTEGER}, #{availableIndustry,jdbcType=VARCHAR}, #{availableArea,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zlwon.rdb.entity.DealerProductMap" >
    insert into zl_dealer_product_map
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="manufacturerId != null" >
        manufacturer_id,
      </if>
      <if test="brandId != null" >
        brand_id,
      </if>
      <if test="availableIndustry != null" >
        available_industry,
      </if>
      <if test="availableArea != null" >
        available_area,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="manufacturerId != null" >
        #{manufacturerId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null" >
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="availableIndustry != null" >
        #{availableIndustry,jdbcType=VARCHAR},
      </if>
      <if test="availableArea != null" >
        #{availableArea,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zlwon.rdb.entity.DealerProductMap" >
    update zl_dealer_product_map
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="manufacturerId != null" >
        manufacturer_id = #{manufacturerId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null" >
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="availableIndustry != null" >
        available_industry = #{availableIndustry,jdbcType=VARCHAR},
      </if>
      <if test="availableArea != null" >
        available_area = #{availableArea,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zlwon.rdb.entity.DealerProductMap" >
    update zl_dealer_product_map
    set uid = #{uid,jdbcType=INTEGER},
      manufacturer_id = #{manufacturerId,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      available_industry = #{availableIndustry,jdbcType=VARCHAR},
      available_area = #{availableArea,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
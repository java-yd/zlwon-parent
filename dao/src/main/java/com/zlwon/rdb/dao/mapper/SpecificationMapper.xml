<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zlwon.rdb.dao.SpecificationMapper" >
    <resultMap id="SpecificationEntity" type="com.zlwon.rdb.entity.Specification" >
        <id column="id" property="id" />
        <result property="nsid" column="nsid"/>
        <result property="name" column="name"/>
        <result property="mid" column="mid"/>
        <result property="tid" column="tid"/>
        <result property="msid" column="msid"/>
        <result property="fidStr" column="fid_str"/>
        <result property="fillerRatio" column="filler_ratio"/>
        <result property="fidStr" column="scid_str"/>
        <result property="label" column="label"/>
        <result property="content" column="content"/>
        <result property="pdf" column="pdf"/>
        <result property="createTime" column="create_time"/>
        <result property="del" column="del"/>
    </resultMap>
    
    <!-- 物性详情出参 -->
    <resultMap id="SpecificationDetailVo" type="com.zlwon.vo.specification.SpecificationDetailVo" >
        <id column="id" property="id" />
        <result property="name" column="name"/>
        <result property="manufacturer" column="manufacturer"/>
        <result property="brandName" column="brandName"/>
        <result property="baseMaterial" column="baseMaterial"/>
        <result property="filler" column="filler"/>
        <result property="fillerRatio" column="fillerRatio"/>
        <result property="safetyCert" column="safetyCert"/>
        <result property="label" column="label"/>
        <result property="content" column="content"/>
        <result property="pdf" column="pdf"/>
        <result property="createTime" column="createTime"/>
        <result property="isCollect" column="isCollect"/>
        <result property="collectId" column="collectId"/>
        <result property="caseCount" column="caseCount"/>
        <result property="questionCount" column="questionCount"/>
        <result property="quotationCount" column="quotationCount"/>
    </resultMap>

	<!-- 根据id查询物性表 -->
    <select id="findSpecificationById" resultMap="SpecificationEntity" parameterType="java.lang.Integer">
        select
        id, nsid, name, mid, tid ,msid, fid_str, filler_ratio, 
        scid_str, label, content, pdf, create_time, del 
        from zl_specification 
        where id = #{id}
    </select>
    
    <!-- 根据规格名称查询物性表 -->
    <select id="findSpecificationByName" resultMap="SpecificationEntity" parameterType="java.lang.String">
        select
        id, nsid, name, mid, tid ,msid, fid_str, filler_ratio,
        scid_str, label, content, pdf, create_time, del 
        from zl_specification 
        where name = #{name}
    </select>
    
    <!-- 根据商标ID查询物性表 -->
    <select id="findSpecificationByBrand" resultMap="SpecificationEntity" parameterType="java.lang.Integer">
        select
        id, nsid, name, mid, tid ,msid, fid_str, filler_ratio,
        scid_str, label, content, pdf, create_time, del 
        from zl_specification 
        where tid = #{brandId}
    </select>
    
    <!-- 根据生产商ID查询物性表 -->
    <select id="findSpecificationByManuf" resultMap="SpecificationEntity" parameterType="java.lang.Integer">
        select
        id, nsid, name, mid, tid ,msid, fid_str, filler_ratio, 
        scid_str, label, content, pdf, create_time, del 
        from zl_specification 
        where mid = #{manufId}
    </select>
    
    <!-- 根据id查询物性具体详情信息 -->
    <select id="findSpecDetailById" resultMap="SpecificationDetailVo" parameterType="java.lang.Integer">
        select
        a.id, a.name,a.filler_ratio as fillerRatio, b.company as manufacturer, c.name as brandName,
        d.name as baseMaterial,a.fid_str as filler, 
        a.scid_str as safetyCert, a.label, a.content, 
        a.pdf, a.create_time AS createTime
        from zl_specification as a 
        left join zl_customer as b on b.id = a.mid 
        left join zl_specification_parameter as c on c.id = a.tid 
        left join zl_specification_parameter as d on d.id = a.msid 
        where a.id = #{id}
    </select>
    
    <!-- 根据规格名称查询物性具体详情信息 -->
    <select id="findSpecDetailByName" resultMap="SpecificationDetailVo" parameterType="java.lang.String">
        select
        a.id, a.name,a.filler_ratio as fillerRatio, b.company as manufacturer, c.name as brandName,
        d.name as baseMaterial,a.fid_str as filler, 
        a.scid_str as safetyCert, a.label, a.content, 
        a.pdf, a.create_time AS createTime
        from zl_specification as a 
        left join zl_customer as b on b.id = a.mid 
        left join zl_specification_parameter as c on c.id = a.tid 
        left join zl_specification_parameter as d on d.id = a.msid 
        where a.name = #{name}
    </select>
    
    
    
    
    
    
    
    
    
    <!--                           自动生成                                                                    -->
    <resultMap id="BaseResultMap" type="com.zlwon.rdb.entity.Specification" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nsid" property="nsid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="mid" property="mid" jdbcType="INTEGER" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="msid" property="msid" jdbcType="INTEGER" />
    <result column="fid_str" property="fidStr" jdbcType="VARCHAR" />
    <result column="filler_ratio" property="fillerRatio" jdbcType="VARCHAR" />
    <result column="scid_str" property="scidStr" jdbcType="VARCHAR" />
    <result column="label" property="label" jdbcType="VARCHAR" />
    <result column="pdf" property="pdf" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="del" property="del" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zlwon.rdb.entity.Specification" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, nsid, name, mid, tid, msid, fid_str, filler_ratio, scid_str, label, pdf, create_time, 
    del
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zl_specification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zl_specification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zlwon.rdb.entity.Specification" useGeneratedKeys="true" keyProperty="id">
    insert into zl_specification (id, nsid, name, 
      mid, tid, msid, fid_str, 
      filler_ratio, scid_str, label, 
      pdf, create_time, del, 
      content)
    values (#{id,jdbcType=INTEGER}, #{nsid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{mid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{msid,jdbcType=INTEGER}, #{fidStr,jdbcType=VARCHAR}, 
      #{fillerRatio,jdbcType=VARCHAR}, #{scidStr,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, 
      #{pdf,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{del,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zlwon.rdb.entity.Specification" >
    insert into zl_specification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nsid != null" >
        nsid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="msid != null" >
        msid,
      </if>
      <if test="fidStr != null" >
        fid_str,
      </if>
      <if test="fillerRatio != null" >
        filler_ratio,
      </if>
      <if test="scidStr != null" >
        scid_str,
      </if>
      <if test="label != null" >
        label,
      </if>
      <if test="pdf != null" >
        pdf,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="del != null" >
        del,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nsid != null" >
        #{nsid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="msid != null" >
        #{msid,jdbcType=INTEGER},
      </if>
      <if test="fidStr != null" >
        #{fidStr,jdbcType=VARCHAR},
      </if>
      <if test="fillerRatio != null" >
        #{fillerRatio,jdbcType=VARCHAR},
      </if>
      <if test="scidStr != null" >
        #{scidStr,jdbcType=VARCHAR},
      </if>
      <if test="label != null" >
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="pdf != null" >
        #{pdf,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="del != null" >
        #{del,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zlwon.rdb.entity.Specification" >
    update zl_specification
    <set >
      <if test="nsid != null" >
        nsid = #{nsid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mid != null" >
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="msid != null" >
        msid = #{msid,jdbcType=INTEGER},
      </if>
      <if test="fidStr != null" >
        fid_str = #{fidStr,jdbcType=VARCHAR},
      </if>
      <if test="fillerRatio != null" >
        filler_ratio = #{fillerRatio,jdbcType=VARCHAR},
      </if>
      <if test="scidStr != null" >
        scid_str = #{scidStr,jdbcType=VARCHAR},
      </if>
      <if test="label != null" >
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="pdf != null" >
        pdf = #{pdf,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="del != null" >
        del = #{del,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zlwon.rdb.entity.Specification" >
    update zl_specification
    set nsid = #{nsid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      mid = #{mid,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      msid = #{msid,jdbcType=INTEGER},
      fid_str = #{fidStr,jdbcType=VARCHAR},
      filler_ratio = #{fillerRatio,jdbcType=VARCHAR},
      scid_str = #{scidStr,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      pdf = #{pdf,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del = #{del,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zlwon.rdb.entity.Specification" >
    update zl_specification
    set nsid = #{nsid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      mid = #{mid,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      msid = #{msid,jdbcType=INTEGER},
      fid_str = #{fidStr,jdbcType=VARCHAR},
      filler_ratio = #{fillerRatio,jdbcType=VARCHAR},
      scid_str = #{scidStr,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      pdf = #{pdf,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del = #{del,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    
    <!-- 根据规格名称模糊查询物性表 -->
    <select id="selectSpecificationByLikeName" resultMap="ResultMapWithBLOBs" >
    	select 
    <include refid="Base_Column_List" />
    	,
    <include refid="Blob_Column_List" />
    	from zl_specification
    	where label like CONCAT('%',#{specName,jdbcType=VARCHAR},'%')
  	</select>
  	
  	<!-- 根据规格名称模糊搜索标签和生产商ID查询物性表 -->
    <select id="selectSpecificationByLikeNameMid" resultMap="ResultMapWithBLOBs" >
    	select 
    <include refid="Base_Column_List" />
    	,
    <include refid="Blob_Column_List" />
    	from zl_specification
    	where label like CONCAT('%',#{specName,jdbcType=VARCHAR},'%') and mid = #{mid}
  	</select>
    
    <!-- 根据规格名称得到物性信息 -->
   <select id="selectSpecificationByNameMake" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from zl_specification
    where name = #{name,jdbcType=VARCHAR}  and  del = 1
  </select>
  
  <!-- 得到所有物性(正常状态) -->
    <select id="selectAllSpecificationMake" resultType="com.zlwon.vo.specification.SpecificationDetailVo">
        SELECT
        a.id, a.name,a.filler_ratio as fillerRatio, b.company AS manufacturer, c.name AS brandName,
        d.name AS baseMaterial,a.fid_str AS filler,
        a.scid_str AS safetyCert, a.label, a.content, 
        a.pdf, a.create_time AS createTime
        FROM zl_specification AS a 
        LEFT JOIN zl_customer AS b ON b.id = a.mid  AND b.del = 1
        LEFT JOIN zl_specification_parameter AS c ON c.id = a.tid 
        LEFT JOIN zl_specification_parameter AS d ON d.id = a.msid 
        WHERE a.del = 1  
        <if test="message != null  and  message != ''">
        	and a.name like  CONCAT('%',#{message,jdbcType=VARCHAR},'%')
        </if>
        order  by   a.id  desc
    </select>
    
    <!-- pc端分页查询物性表信息 -->
    <select id="selectSpecifyByPcPage" resultMap="SpecificationDetailVo">
        select
        a.id, a.name,a.filler_ratio as fillerRatio, b.company as manufacturer, c.`name` as brandName,
        d.`name` as baseMaterial,a.label, a.content, 
        a.pdf, a.create_time AS createTime,e.id as collectId,
        CASE WHEN e.id IS NULL then 0 else 1 end as isCollect,
        (SELECT COUNT(*) FROM zl_application_case as re WHERE re.sid = a.id AND re.del = 1) as caseCount,
		(SELECT COUNT(*) FROM zl_questions as qst WHERE qst.iid = a.id AND qst.info_class = 1 and qst.examine =1) as questionCount,
		(SELECT COUNT(*) FROM zl_dealerd_quotation as dq WHERE dq.sid = a.id AND dq.examine = 1 ) as quotationCount 
        from zl_specification as a 
        left join zl_customer as b on b.id = a.mid 
        left join zl_specification_parameter as c on c.id = a.tid 
        left join zl_specification_parameter as d on d.id = a.msid 
        left join zl_collection as e on e.iid = a.id and e.type = 1 and e.uid = #{userId} 
        where 1 = 1 and a.del = 1 
        <if test="manufacturerStr != null and manufacturerStr != ''" >
        	and a.mid = #{manufacturerStr} 
        </if>
        <if test="brandNameStr != null and brandNameStr != ''" >
        	and a.tid in (${brandNameStr})
        </if>
        <if test="baseMaterialStr != null and baseMaterialStr != ''" >
        	and a.msid in (${baseMaterialStr})
        </if>
        <if test="fillerStr != null and fillerStr != ''" >
        	and compareStr(a.fid_str,#{fillerStr}) = 1 and a.fid_str IS NOT NULL
        </if>
        <if test="safeCertifyStr != null and safeCertifyStr != ''" >
        	and compareStr(a.scid_str,#{safeCertifyStr}) = 1 and a.scid_str IS NOT NULL
        </if>
        <if test="searchText != null and searchText != ''" >
        	and a.label like CONCAT('%',#{searchText},'%') 
        </if>
        ORDER BY 
        <!-- (SELECT COUNT(*) FROM zl_collection as m2 WHERE m2.iid = a.id AND m2.type = 1 )  DESC, -->
        e.id DESC ,
		(SELECT COUNT(*) FROM zl_application_case as n2 WHERE n2.sid = a.id and n2.del = 1 and n2.examine = 1 ) DESC ,
		(SELECT COUNT(*) FROM zl_questions as k2 WHERE k2.examine = 1 and k2.info_class = 1 and k2.iid = a.id ) DESC
    </select>
    
    <!-- 小程序端分页查询物性表信息 -->
    <select id="selectWCSpecByPage" resultMap="SpecificationDetailVo">
        select
        a.id, a.name,a.filler_ratio as fillerRatio, b.company as manufacturer, c.`name` as brandName,
        d.`name` as baseMaterial,a.label, a.content, 
        a.pdf, a.create_time AS createTime,e.id as collectId,
        CASE WHEN e.id IS NULL then 0 else 1 end as isCollect 
        from zl_specification as a 
        left join zl_customer as b on b.id = a.mid 
        left join zl_specification_parameter as c on c.id = a.tid 
        left join zl_specification_parameter as d on d.id = a.msid 
        left join zl_collection as e on e.iid = a.id and e.type = 1 and e.uid = #{userId} 
        where 1 = 1 and a.del = 1 
        <if test="manufacturerId != null and manufacturerId != ''" >
        	and a.mid = #{manufacturerId} 
        </if>
        <if test="baseMaterialId != null and baseMaterialId != ''" >
        	and a.msid = #{baseMaterialId} 
        </if>
        <if test="fillerId != null and fillerId != ''" >
        	and compareStr(a.fid_str,#{fillerId}) = 1 and a.fid_str IS NOT NULL
        </if>
        <if test="safeCertifyId != null and safeCertifyId != ''" >
        	and compareStr(a.scid_str,#{safeCertifyId}) = 1 and a.scid_str IS NOT NULL
        </if>
        <if test="searchText != null and searchText != ''" >
        	and a.label like CONCAT('%',#{searchText},'%') 
        </if>
        ORDER BY 
		(SELECT COUNT(*) FROM zl_application_case as n2 WHERE n2.sid = a.id and n2.del = 1 and n2.examine = 1 ) DESC
    </select>
    
    
    <!-- 根据生产商id，得到所有物性 -->
    <select id="selectSpecificationByMidMake" resultMap="SpecificationEntity" >
        select
        id, name
        from zl_specification 
        where mid = #{id}  and  del=1
        <if test=" key != null  and  key.trim() != '' ">
			and  name   LIKE CONCAT('%',#{key},'%')
		</if>
    </select>
    
    
    
    
    <resultMap id="SpecificationVoMap" type="com.zlwon.vo.specification.SpecificationVo" >
	    <id column="id" property="id" jdbcType="INTEGER" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="mid" property="mid" jdbcType="INTEGER" />
	    <result column="tid" property="tid" jdbcType="INTEGER" />
	    <result column="msid" property="msid" jdbcType="INTEGER" />
	    <result column="fid_str" property="fidStr" jdbcType="VARCHAR" />
	    <result column="filler_ratio" property="fillerRatio" jdbcType="VARCHAR" />
	    <result column="scid_str" property="scidStr" jdbcType="VARCHAR" />
	    <result column="label" property="label" jdbcType="VARCHAR" />
	    <result column="content" property="content" jdbcType="LONGVARCHAR" />
	    <result column="pdf" property="pdf" jdbcType="VARCHAR" />
	  </resultMap>
    <!-- 根据物性id，得到物性详情 -->
    <select id="selectSpecificationDetailsById" resultMap="SpecificationVoMap" >
       select 
	    <include refid="Base_Column_List" />
	    ,
	    <include refid="Blob_Column_List" />
	    from zl_specification
	    where id = #{id,jdbcType=INTEGER}
    </select>
    
    
</mapper>
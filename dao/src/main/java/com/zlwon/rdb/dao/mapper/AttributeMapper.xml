<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zlwon.rdb.dao.AttributeMapper" >
  <resultMap id="BaseResultMap" type="com.zlwon.rdb.entity.Attribute" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="classname" property="classname" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="test_conditions" property="testConditions" jdbcType="VARCHAR" />
    <result column="test_method" property="testMethod" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, classname, name, status, unit, test_conditions, test_method
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zl_attribute
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zl_attribute
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zlwon.rdb.entity.Attribute" >
    insert into zl_attribute (id, classname, name, 
      status, unit, test_conditions, 
      test_method)
    values (#{id,jdbcType=INTEGER}, #{classname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{testConditions,jdbcType=VARCHAR}, 
      #{testMethod,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zlwon.rdb.entity.Attribute" >
    insert into zl_attribute
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="classname != null" >
        classname,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="testConditions != null" >
        test_conditions,
      </if>
      <if test="testMethod != null" >
        test_method,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="testConditions != null" >
        #{testConditions,jdbcType=VARCHAR},
      </if>
      <if test="testMethod != null" >
        #{testMethod,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zlwon.rdb.entity.Attribute" >
    update zl_attribute
    <set >
      <if test="classname != null" >
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="testConditions != null" >
        test_conditions = #{testConditions,jdbcType=VARCHAR},
      </if>
      <if test="testMethod != null" >
        test_method = #{testMethod,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zlwon.rdb.entity.Attribute" >
    update zl_attribute
    set classname = #{classname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      test_conditions = #{testConditions,jdbcType=VARCHAR},
      test_method = #{testMethod,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!-- 得到所有物性属性 -->
  <select id="selectAllAttribute" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from zl_attribute
  </select>
  
  
  
  <!-- 根据物性属性id数组，得到属性信息集合 -->
  <select id="selectByPrimaryKeys"  resultType="com.zlwon.nosql.entity.SpecAttributeData">
    select classname as  class_name,name,status,unit,test_conditions,test_method
    from zl_attribute
    where id in 
    <foreach collection="ids" item="id" separator=","  open="("  close=")">
    	#{id}
    </foreach>
  </select>
</mapper>
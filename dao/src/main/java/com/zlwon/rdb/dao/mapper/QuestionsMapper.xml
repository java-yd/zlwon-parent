<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zlwon.rdb.dao.QuestionsMapper" >
    
   <resultMap id="BaseResultMap" type="com.zlwon.rdb.entity.Questions" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nsid" property="nsid" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="iid" property="iid" jdbcType="INTEGER" />
    <result column="info_class" property="infoClass" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="examine" property="examine" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zlwon.rdb.entity.Questions" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <resultMap id="QuestionsDetailVo" type="com.zlwon.vo.pc.questions.QuestionsDetailVo" >
        <id column="id" property="id" />
        <result property="uid" column="uid"/>
        <result property="nickname" column="nickname"/>
        <result property="headerimg" column="headerimg"/>
        <result property="iid" column="iid"/>
        <result property="source" column="source"/>
        <result property="infoClass" column="infoClass"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="createTime" column="createTime"/>
        <result property="isCollect" column="isCollect"/>
        <result property="collectId" column="collectId"/>
    </resultMap>
  
  <sql id="Base_Column_List" >
    id, nsid, uid, iid, info_class, title, create_time, examine
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zl_questions
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zl_questions
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zlwon.rdb.entity.Questions" >
    insert into zl_questions (id, nsid, uid, 
      iid, info_class, title, 
      create_time, examine, content
      )
    values (#{id,jdbcType=INTEGER}, #{nsid,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, 
      #{iid,jdbcType=INTEGER}, #{infoClass,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{examine,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zlwon.rdb.entity.Questions" >
    insert into zl_questions
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nsid != null" >
        nsid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="iid != null" >
        iid,
      </if>
      <if test="infoClass != null" >
        info_class,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="examine != null" >
        examine,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nsid != null" >
        #{nsid,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="iid != null" >
        #{iid,jdbcType=INTEGER},
      </if>
      <if test="infoClass != null" >
        #{infoClass,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examine != null" >
        #{examine,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zlwon.rdb.entity.Questions" >
    update zl_questions
    <set >
      <if test="nsid != null" >
        nsid = #{nsid,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="iid != null" >
        iid = #{iid,jdbcType=INTEGER},
      </if>
      <if test="infoClass != null" >
        info_class = #{infoClass,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examine != null" >
        examine = #{examine,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zlwon.rdb.entity.Questions" >
    update zl_questions
    set nsid = #{nsid,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      iid = #{iid,jdbcType=INTEGER},
      info_class = #{infoClass,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      examine = #{examine,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zlwon.rdb.entity.Questions" >
    update zl_questions
    set nsid = #{nsid,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      iid = #{iid,jdbcType=INTEGER},
      info_class = #{infoClass,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      examine = #{examine,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    
    <!-- 根据用户ID查询其所有的提问 -->
    <select id="findQuestionsByUId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        id, nsid, uid, iid, info_class ,title, content, create_time, examine 
        from zl_questions 
        where uid = #{uid}
    </select>
    
    <!-- 根据信息ID查询问题数量 -->
    <select id="countQuestionsByInfoId" resultType="java.lang.Integer">
        select
        count(*) 
        from zl_questions
        where iid = #{infoId} and info_class = #{type} and examine = 1 
    </select>
    
    <!-- 分页查询我的提问问题 -->
    <select id="selectQuestionsByMyLaunch" resultMap="QuestionsDetailVo">
       	select
        a.id,a.uid,b.nickname,b.headerimg,a.iid,a.info_class as infoClass,
        a.title,a.content,a.create_time as createTime,c.id as collectId,
        CASE WHEN c.id IS NULL then 0 else 1 end as isCollect,
        CASE WHEN ca.title IS NULL then spec.`name` else ca.title end as source,
        (SELECT COUNT(*) FROM zl_answer as aw WHERE aw.qid = a.id and aw.examine = 1 ) as answerCount 
        from zl_questions as a 
        left join zl_customer as b on b.id = a.uid 
        left join zl_collection as c on c.iid = a.id and c.type = 3 and c.uid = #{userId}
        left join zl_specification as spec on spec.id = a.iid and a.info_class = 1 
        left join zl_application_case as ca on ca.id = a.iid and a.info_class = 2 
        where a.uid = #{userId} and a.examine = 1 
        <if test=" infoClass != null and infoClass != '' ">
        	and a.info_class = #{infoClass} 
        </if>
        <!-- <if test=" infoId != null and infoClass != null ">
        	and a.iid = #{infoId} and a.info_class = #{infoClass} 
        </if> -->
        order by a.create_time desc 
    </select>
    
    <!-- 分页查询我收藏的问题 -->
    <select id="selectQuestionsByMyCollect" resultMap="QuestionsDetailVo">
       	select
        a.id,a.uid,b.nickname,b.headerimg,a.iid,a.info_class as infoClass,
        a.title,a.content,a.create_time as createTime,c.id as collectId,
        1 as isCollect,
        CASE WHEN ca.title IS NULL then spec.`name` else ca.title end as source,
        (SELECT COUNT(*) FROM zl_answer as aw WHERE aw.qid = a.id and aw.examine = 1 ) as answerCount 
        from zl_collection as c 
        left join zl_questions as a on c.iid = a.id 
        left join zl_customer as b on b.id = a.uid 
        left join zl_specification as spec on spec.id = a.iid and a.info_class = 1
        left join zl_application_case as ca on ca.id = a.iid and a.info_class = 2 
        where a.examine = 1 and c.uid = #{userId} and c.type = 3 
        <if test=" infoClass != null and infoClass != '' ">
        	and a.info_class = #{infoClass} 
        </if>
        <!-- <if test=" infoId != null and infoClass != null ">
        	and a.iid = #{infoId} and a.info_class = #{infoClass} 
        </if> -->
        order by a.create_time desc 
    </select>
    
    <!-- 分页查询我回答的问题 -->
    <select id="selectQuestionsByMyAnswer" resultMap="QuestionsDetailVo">
       	select
        DISTINCT a.id,a.uid,b.nickname,b.headerimg,a.iid,a.info_class as infoClass,
        a.title,a.content,a.create_time as createTime,c.id as collectId,
        CASE WHEN c.id IS NULL then 0 else 1 end as isCollect,
        CASE WHEN ca.title IS NULL then spec.`name` else ca.title end as source,
        (SELECT COUNT(*) FROM zl_answer as aw WHERE aw.qid = a.id and aw.examine = 1 ) as answerCount 
        from zl_questions as a 
        left join zl_customer as b on b.id = a.uid 
        left join zl_collection as c on c.iid = a.id and c.type = 3 and c.uid = #{userId}
        left join zl_specification as spec on spec.id = a.iid and a.info_class = 1 
        left join zl_application_case as ca on ca.id = a.iid and a.info_class = 2 
        left join zl_answer as ans on ans.qid = a.id 
        where ans.uid = #{userId} and a.examine = 1 and ans.examine = 1 
        <if test=" infoClass != null and infoClass != '' ">
        	and a.info_class = #{infoClass} 
        </if>
        <!-- <if test=" infoId != null and infoClass != null ">
        	and a.iid = #{infoId} and a.info_class = #{infoClass} 
        </if> -->
        order by a.create_time desc 
    </select>
    
    <!-- 分页查询我关注的人的问题 -->
    <select id="selectMyAttentionQuestions" resultMap="QuestionsDetailVo">
       	select
        a.id,a.uid,b.nickname,b.headerimg,a.iid,a.info_class as infoClass,
        a.title,a.content,a.create_time as createTime,c.id as collectId,
        CASE WHEN c.id IS NULL then 0 else 1 end as isCollect,
        CASE WHEN ca.title IS NULL then spec.`name` else ca.title end as source,
        (SELECT COUNT(*) FROM zl_answer as aw WHERE aw.qid = a.id and aw.examine = 1 ) as answerCount 
        from zl_questions as a 
        left join zl_customer as b on b.id = a.uid 
        left join zl_collection as c on c.iid = a.id and c.type = 3 and c.uid = #{userId}
        left join zl_specification as spec on spec.id = a.iid and a.info_class = 1 
        left join zl_application_case as ca on ca.id = a.iid and a.info_class = 2 
        left join zl_customer_attention as cat on cat.puid = a.uid 
        where cat.uid = #{userId} and a.examine = 1 
        <if test=" infoClass != null and infoClass != '' ">
        	and a.info_class = #{infoClass} 
        </if>
        <!-- <if test=" infoId != null and infoClass != null ">
        	and a.iid = #{infoId} and a.info_class = #{infoClass} 
        </if> -->
        order by a.create_time desc 
    </select>
    
    <!-- 分页查询关注我的人的问题 -->
    <select id="selectAttentionMeQuestions" resultMap="QuestionsDetailVo">
       	select
        a.id,a.uid,b.nickname,b.headerimg,a.iid,a.info_class as infoClass,
        a.title,a.content,a.create_time as createTime,c.id as collectId,
        CASE WHEN c.id IS NULL then 0 else 1 end as isCollect,
        CASE WHEN ca.title IS NULL then spec.`name` else ca.title end as source,
        (SELECT COUNT(*) FROM zl_answer as aw WHERE aw.qid = a.id and aw.examine = 1 ) as answerCount 
        from zl_questions as a 
        left join zl_customer as b on b.id = a.uid 
        left join zl_collection as c on c.iid = a.id and c.type = 3 and c.uid = #{userId}
        left join zl_specification as spec on spec.id = a.iid and a.info_class = 1 
        left join zl_application_case as ca on ca.id = a.iid and a.info_class = 2 
        left join zl_customer_attention as cat on cat.uid = a.uid
        where cat.puid = #{userId} and a.examine = 1 
        <if test=" infoClass != null and infoClass != '' ">
        	and a.info_class = #{infoClass} 
        </if>
        <!-- <if test=" infoId != null and infoClass != null ">
        	and a.iid = #{infoId} and a.info_class = #{infoClass} 
        </if> -->
        order by a.create_time desc 
    </select>
    
    <!-- 分页查询特定类型的问题（可指定具体） -->
    <select id="selectAllSpecifyQuestions" resultMap="QuestionsDetailVo">
       	select
        a.id,a.uid,b.nickname,b.headerimg,a.iid,a.info_class as infoClass,
        a.title,a.content,a.create_time as createTime,c.id as collectId,
        CASE WHEN c.id IS NULL then 0 else 1 end as isCollect,
        CASE WHEN ca.title IS NULL then spec.`name` else ca.title end as source,
        (SELECT COUNT(*) FROM zl_answer as aw WHERE aw.qid = a.id and aw.examine = 1 ) as answerCount 
        from zl_questions as a 
        left join zl_customer as b on b.id = a.uid 
        left join zl_collection as c on c.iid = a.id and c.type = 3 
        <if test=" userId != null and userId != '' ">
        	and c.uid = #{userId} 
        </if>
        left join zl_specification as spec on spec.id = a.iid and a.info_class = 1 
        left join zl_application_case as ca on ca.id = a.iid and a.info_class = 2 
        where a.examine = 1  
        <if test=" infoClass != null and infoClass != '' ">
        	and a.info_class = #{infoClass}
        </if>
        <if test=" infoId != null and infoId != '' ">
        	and a.iid = #{infoId} 
        </if>
        <if test=" userId == null or userId == '' ">
        	group by a.id 
        </if>
        order by a.create_time desc 
    </select>
    
    <!-- 根据问题ID查询问题详情 -->
    <select id="selectSingleQuestionDetailById" resultMap="QuestionsDetailVo" parameterType="java.lang.Integer" >
       	select
        a.id,a.uid,b.nickname,b.headerimg,a.iid,a.info_class as infoClass,
        a.title,a.content,a.create_time as createTime,c.id as collectId,
        CASE WHEN c.id IS NULL then 0 else 1 end as isCollect,
        CASE WHEN ca.title IS NULL then spec.`name` else ca.title end as source,
        (SELECT COUNT(*) FROM zl_answer as aw WHERE aw.qid = a.id and aw.examine = 1 ) as answerCount 
        from zl_questions as a 
        left join zl_customer as b on b.id = a.uid 
        left join zl_collection as c on c.iid = a.id and c.type = 3 
        left join zl_specification as spec on spec.id = a.iid and a.info_class = 1 
        left join zl_application_case as ca on ca.id = a.iid and a.info_class = 2 
        where a.id = #{questionId} 
    </select>
    
    
    
    <!-- 得到首页最热门的问答(根据提问回答最多查询，最多4个) -->
    <select id="selectHotQuestions" resultType="com.zlwon.vo.pc.applicationCase.IndexHotApplicationCaseQuestionAndAnswerVo">
	    SELECT   *  FROM   (
		SELECT  COUNT(a.qid) num,q.id,q.title,a.content,c.nickname,q.create_time  createTime 
		FROM   (SELECT   *  FROM   zl_answer  a   WHERE  a.examine=1 ORDER  BY   a.id  DESC) a
		LEFT   JOIN   zl_questions  q   ON   a.qid=q.id   
		LEFT   JOIN   zl_customer   c   ON   q.uid=c.id
		WHERE   q.examine=1 AND  c.del=1  GROUP   BY   a.qid
		)  temp   ORDER  BY   temp.num  DESC   LIMIT   4 
    </select>
    
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zlwon.rdb.dao.SpecificationParameterMapper">
	<resultMap id="BaseResultMap" type="com.zlwon.rdb.entity.SpecificationParameter">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="class_type" property="classType" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, class_type
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from zl_specification_parameter
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from zl_specification_parameter
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.zlwon.rdb.entity.SpecificationParameter"  useGeneratedKeys="true"  keyProperty="id">
		insert into zl_specification_parameter (id, name, class_type
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{classType,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.zlwon.rdb.entity.SpecificationParameter">
		insert into zl_specification_parameter
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="classType != null">
				class_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="classType != null">
				#{classType,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zlwon.rdb.entity.SpecificationParameter">
		update zl_specification_parameter
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="classType != null">
				class_type = #{classType,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zlwon.rdb.entity.SpecificationParameter">
		update zl_specification_parameter
		set name = #{name,jdbcType=VARCHAR},
		class_type = #{classType,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>



	<!-- 得到所有物性参数 -->
	<select id="selectAllSpecificationParameter" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from zl_specification_parameter
	</select>

	<!-- 根据名称和类别得到物性参数信息 -->
	<select id="selectByClasstypeAdminName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from zl_specification_parameter
		where class_type = #{classType,jdbcType=INTEGER} and name =
		#{name,jdbcType=VARCHAR}
	</select>


	<!-- 根据类型，得到所有物性参数信息 -->
	<select id="selectSpecificationParameterByClasstype" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from zl_specification_parameter
		where class_type = #{classType,jdbcType=INTEGER}
	</select>


	<!-- 根据类型和名称，得到参数信息， -->
	<select id="selectByTypeAndName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from zl_specification_parameter
		<where>
			<if test="type != null  and  type > 0">
				class_type = #{type}
			</if>
			<if test="name != null  and  name.trim() != '' ">
				and name = #{name}
			</if>
		</where>
	</select>


	<!-- 根据类型，得到所有物性参数信息 -->
	<select id="selectByClasstypeAndKeySelective" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from zl_specification_parameter
		where class_type = #{classType,jdbcType=INTEGER}
		<if test=" key != null   and  key.trim() != '' ">
			and  name  LIKE CONCAT('%',#{key},'%')
		</if>
		
	</select>
	
	<!-- 根据ID字符串查询所在其内的物性案例参数 -->
	<select id="selectSpecificationParameterByIdStr" resultMap="BaseResultMap" parameterType="java.lang.String" >
		select
		<include refid="Base_Column_List" />
		from zl_specification_parameter 
		where id in (${idStr})
	</select>
	
	
	<!-- 根据应用行业id，得到所有应用市场数据，可根据名称模糊查询 -->
	<select id="selectParamByIndustryId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from zl_specification_parameter
		where parent_id = #{id,jdbcType=INTEGER}   and  class_type = 7
	</select>
</mapper>